@use '../layout' as layout;
@use '../assets' as asset;
@use '../fonts' as font;

.modal {
  display: grid;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  height: 100vh;
  pointer-events: none;
  overflow-y: scroll;
  scrollbar-width: none;
  z-index: 10;

  &::-webkit-scrollbar { /* Chrome, Safari, Opera */
    display: none;
  }

  &::before {
    position: fixed;
    top: 0;
    opacity: 0;
    height: 100%;
    width: 100%;
    background: var(--wg-1000);
    will-change: transform;
    transition: opacity 500ms ease;
    content: '';
  }

  &[open]::before {
    opacity: 0.9;
  }

  &[close-top]::before {
    opacity: 0;
  }
}

modal-card {
  @include layout.rounded;
  display: grid;
  grid-template-rows: auto 1fr auto;
  grid-template-areas:
        "modal_header"
        "modal_content"
        "modal_footer";
  position: relative;
  bottom: -100vh;
  padding: 1.5rem 2.5rem 2.5rem;
  margin: 20vh 0 10vh;
  @include asset.background('paper', soft-light, var(--modal-surface));
  font: font.$ui-text;
  color: var(--on-modal-surface);
  will-change: transform;
  transition: bottom 500ms ease;
  pointer-events: auto;
  visibility: hidden;

  [open] & {
    bottom: 0;
    visibility: visible;
  }

  [close-top] & {
    bottom: 100vh;
  }

  @media (min-width: layout.$md) {
    width: clamp(576px, 80%, 768px);
    padding-inline: 3rem;
    justify-self: center;
  }

  .modal-close {
    color: var(--on-modal) !important;
    cursor: pointer;

    &.top {
      grid-area: modal_header;
      justify-self: end;
    }

    &.bottom {
      grid-area: modal_footer;
      padding-top: 1.5rem !important;
      place-self: center !important;
    }

    svg {
      height: 1.75em;
    }
  }

  .modal-content {
    grid-area: modal_content;

    h2, h3 {
      color: var(--on-modal);
      font-weight: 500;
      text-align: center;
      font-size: 1.2em;
    }

    h2 {
      font: 500 2em font.$primary-heading;
      padding-bottom: 0.5em;
    }

    h3 {
      font: font.$secondary-heading;
      padding: 1.5em 0 0.5em;
    }

    p {
      width: 100%;
      padding: 1em 0;
    }
  }

  &[content='preferences-panel'] {

    button {
      height: 4rem;
      width: 100%;
      padding: 0.5rem;

      &:has(.tetra-hebrew) {
        padding: 0.3rem 0.5rem 0.5rem;
      }
    }

    .marker {
      color: var(--rubric);
    }

    .select {
      display: grid;
      grid-template-rows: auto auto;
      grid-template-columns: 50% 50%;
      row-gap: 0.5em;
      column-gap: 0.5em;
      padding: 0;
      justify-content: center;

      @media (min-width: layout.$md) {
        gap: 1em;
      }
    }

    // improve: fix content shifting when options are changed -- regularise box size?
    .verse {
      @include layout.rounded-sm;
      color: var(--on-text-surface);
      display: block;
      width: fit-content;
      padding: 1em 1.5em;
      margin-inline: 1em;
      justify-self: center;
      background: var(--text-surface);
      font: var(--body-font);
      text-wrap: pretty;
    }

    .toggle button {
      height: 8rem;
      margin-top: 1.5rem;
    }
  }

  &[content='preferences-prompt'] {

    height: fit-content;
    width: 100%;
    background: var(--modal-background);

    button { // TODO compare this with default
      //width: fit-content;
      //padding: 1rem 1.5rem;
    }

    h2 {
      width: 100%;
      padding: 1em;
      font-weight: font.$primary-heading;
    }

    p {
      text-align: center;
    }

    svg {
      height: 1.5rem;
      transform: translateY(0.35rem);
      padding: 0.25rem;
      margin-inline: 0.25rem;
      background: var(--modal-highlight-background);
      fill: var(--on-modal-highlight);
      border-radius: 0.25rem;
    }
  }

  &[content='info'] {

    .acknowledgements {
      display: grid;
      gap: 1rem;
      padding: 1rem;
    }
  }

  &[content='about'] {
    line-height: 1.5em;

    svg {
      height: 0.8rem;
      padding-right: 0.25em;
      fill: var(--on-modal);
    }

    .em-block {
      color: var(--on-modal);
      font-size: 2em;
      font-weight: 300;
      line-height: 1.25em;
    }

    .inline-logo {
      background-color: var(--modal-highlight-background);
      color: var(--change-me);
      font: font.$primary-heading;
    }

    .key {
      background-color: var(--modal-highlight-background);
      color: var(--on-modal-highlight);
      border: 3px solid var(--modal-highlight-background);
    }
  }
}