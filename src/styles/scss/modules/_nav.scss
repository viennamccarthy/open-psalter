@use '../resources' as const;

nav.main {
  display: flex;
  flex-direction: row;
  height: 1.5em;
  justify-content: space-between;
  align-items: center;
  padding: 1.5em 0.5em;
  background: var(--nav-bar-bg);
  color: var(--text-on-nav-bar);
  pointer-events: none;

  body:has(.psalter) & {
    width: 100%;
  }

  svg {
    cursor: pointer;
    pointer-events: auto;
  }

  .book-line {
    stroke: var(--logo-line);
  }

  .book-left {
    fill: var(--logo-left);
  }

  .book-right {
    fill: var(--logo-right);
  }

  .to-top {
    display: inline;
  }

  .to-top.hidden {
    display: none;
  }
}

@media (min-width: const.$lg) {

  nav.main {
    margin-inline: auto;
    background: none;
    width: 250px;
    z-index: 3;

    body:has(.lectionary) & {
      width: fit-content;
    }
  }

  footer nav.main .left, footer nav.main .right {
    opacity: 0;
    pointer-events: none;
  }
}

nav.multi {
  z-index: 1;
  display: grid;
  gap: 0.5rem;
  position: relative;
  justify-content: center;
  align-self: end;
  background: var(--nav-multi-background);
  color: var(--text-on-nav-multi);
  font: const.$ui-primary-font;

  @media (min-width: const.$md) {
    width: 520px;
    justify-self: center;
  }

  // Top
  &:not(:last-child) {
    @include const.rounded-top;
    grid-template-rows: auto auto;
    grid-template-areas:
        "multi_nav_menu_title"
        "multi_nav_menu_drop";
    top: -3.75rem;
    padding: 0.75rem 1rem 3rem;
    align-self: start;
    align-content: start;
    will-change: transform;
    transition: top 500ms ease;
  }

  //Bottom
  &:last-child {
    @include const.rounded-bottom;
    z-index: 0;
    grid-template-rows: auto auto;
    grid-template-areas:
        "multi_nav_menu_drop"
        "multi_nav_menu_title";
    position: relative;
    bottom: 0;
    padding: 3rem 1rem 1rem;
    align-content: end;
    will-change: transform;
    transition: all 500ms ease;
  }

  .title {
    grid-area: multi_nav_menu_title;
    display: grid;
  }

  .spacer {
    grid-area: exp_spacer;
    width: 20px;
  }

  .text {
    grid-area: exp_text;
    opacity: 0.8;
    font-size: 1.5em;
  }

  .arrow {
    filter: invert(100%);
    opacity: 50%;
  }

  .drop {
    grid-area: multi_nav_menu_drop;

    &.horizontal {
      display: flex;
      flex-wrap: nowrap;
      white-space: nowrap;
      flex-direction: row;
      font: const.$ui-secondary-font;
      font-size: 1.25em;
      padding: 0.5em 0;

      &[scroll] {
        overflow-x: auto;
        -ms-overflow-style: none; /* IE and Edge */
        scrollbar-width: none; /* Firefox */
        place-content: start;
        justify-items: right;
        padding-inline: 50%;
        scroll-snap-type: x mandatory;
        max-width: 100vw;

        &::-webkit-scrollbar { /* Hide scrollbar for Chrome, Safari and Opera */
          display: none;
        }
      }

      * {
        @include const.rounded-sm;
        border: 2px solid var(--button-detail);
        flex-grow: 0;
        flex-basis: 5rem;
        padding: 0.5rem 1rem;
        margin-inline: 0.5rem;
        text-align: center;
        cursor: pointer;
        scroll-snap-align: center;
        color: var(--text-on-button);
        font-weight: 500;

        &.active {
          background: var(--button-active-background);
          border: 2px solid var(--bright);
          color: var(--text-on-button-active);
          font-weight: 600;
        }
      }
    }

    &.vertical {
      text-align: center;
      display: flex;
      flex-direction: column;
      place-items: center;
    }
  }


  &:has([scroll])::before, &:has([scroll])::after {
    z-index: 1;
    grid-area: multi_nav_menu_drop;
    display: flex;
    width: 6rem;
    padding-inline: 0.5rem;
    pointer-events: none;
    align-items: center;
  }

  &:has([scroll])::before {
    justify-self: start;
    justify-content: start;
    background: linear-gradient(to right, var(--color-soft), #00000000);
    content: var(--left-scroll);
  }

  &:has([scroll])::after {
    justify-self: end;
    justify-content: end;
    background: linear-gradient(to left, var(--color-soft), #00000000);
    content: var(--right-scroll);
  }
}
