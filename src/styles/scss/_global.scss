@use 'resources' as const;

@media (prefers-reduced-motion: reduce) {
  *, *::before, *::after {
    transition-duration: 0.01ms !important;
  }
}

html {
  box-sizing: border-box;
  overscroll-behavior: none;
}

*, *:before, *:after {
  box-sizing: inherit;
}

p, h1, h2, h3 {
  margin: 0;
}

a.button {
  @include const.rounded-sm;
  height: fit-content;
  width: 100%;
  padding: 1rem;
  background: var(--pale-transparent);
  color: var(--dark);
  font: const.$ui-secondary-font;
  text-decoration: none;
  text-align: center;
}

body {
  margin: 0;
  justify-content: center;
  background: var(--page-bg);
  font: var(--body-font);
  overscroll-behavior: none;

  &:has(modal-overlay[open]) {
    overflow-y: hidden;
  }

  @media (min-width: const.$md) {
    background: var(--color-primary-main);
  }

  &:not(:has(.vn)) {
    h1, h2, p,
    footer {
      visibility: hidden;
    }
  }
}


header {
  display: flex;
  place-content: center;
  padding: 0 1.5rem;
  background: var(--dark);

  @media (min-width: const.$lg) {
    background: var(--color-primary-main);
    margin-top: 1rem;
  }
}

main {
  margin: auto;
}

footer {
  background: var(--dark);
  text-align: center;
  font: const.$ui-secondary-font;
  font-weight: 300;
  padding: 0 2rem 1rem;
  color: var(--pale-translucent);
  margin-inline: auto;

  a {
    color: var(--pale);
    text-decoration: none;
  }

  p {
    margin: 1rem auto 0.5rem;
    max-width: 675px;
  }

  .logo-1, .logo-2 {
    color: var(--pale-translucent);
  }

  body:has(.lectionary) & {
    padding-top: .5rem;
  }

  @media (min-width: const.$md) {
    font-size: 0.95em;
    margin-top: 2rem;
  }

  @media (min-width: const.$lg) {
    padding: 0 2rem 1rem;
    background-color: transparent;
  }
}

.hidden {
  opacity: 0;
  pointer-events: none;
}

.logo-1 {
  color: var(--color-primary-soft);
}

.logo-2 {
  color: var(--color-primary-main);
}

.inline-logo {
  font: const.$heading-font;

  &.flow {
    font: const.$ui-secondary-font;
  }
}

.preferences {
  .top {
    fill: var(--color-tertiary-main)
  }
  .mid {
    fill: var(--color-secondary-main)
  }
  .bottom {
    fill: var(--color-primary-main)
  }
}

.title-box {

  .buttons {
    z-index: 2;
    display: flex;
    width: 100%;
    max-width: 520px;
    height: const.$title-box-button-spacer;
    padding-right: 1rem;
    justify-content: end;
    position: relative;
    bottom: 1.5rem;

    .preferences {
      display: flex;
      width: 3.15rem;
      cursor: pointer;
      background: var(--pale-translucent);
      border-radius: 2rem;

      svg {
        margin: auto;
      }
    }

    @media (min-width: const.$md) {
      position: absolute;
      max-width: 100%;
      top: 2rem;
      padding-right: 6.5rem;
    }

    @media (min-width: const.$lg) {
      top: -3.5rem;
    }
  }
}

.title-box:not(.office-psalms .title-box) {

  .psalter & {
    grid-area: psalm_title;

    @media (min-width: const.$md) {
      height: const.$condensed-title-height !important;
      position: relative;

      :has(nav.multi) & {
        height: calc(const.$condensed-title-height + const.$main-nav-height) !important;
        min-height: 15.75rem;
      }
    }
  }

  .lectionary & {
    grid-area: office_title;
  }

  @include const.rounded-top;
  display: flex;
  flex-direction: column;
  height: const.$full-title-height;
  position: sticky;
  top: 0;
  padding: 0;
  justify-content: space-between;
  align-items: center;
  background: var(--color-primary-main);



  @media (min-width: const.$md) {
    &::after {
      content: '';
    }
  }

  &::before {
    display: block;
    height: const.$title-box-button-spacer;
    width: 100%;
    content: '';
  }

  h1 {
    position: relative;
    top: 0;
    color: var(--bright);
    font: const.$heading-font;
    font-size: 3em;
    font-weight: 300;
    line-height: 1.5em;
    text-align: center;
  }

  h2 {
    color: var(--pale-translucent);
    font: const.$heading-font;
    font-size: 2em;
    text-align: center;
  }
}


@media (min-width: const.$md) {
  :not(.office-psalms) .title-box {
    height: const.$condensed-title-height;
    min-height: 12rem;
  }
}

@media (min-width: const.$lg) {
  .title-box {
    position: relative !important;
  }
}